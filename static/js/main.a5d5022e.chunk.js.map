{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","border","_useState2","Object","slicedToArray","myStyle","setMystyle","_useState3","_useState4","btntext","setbtnText","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","Navbar","props","concat","mode","href","title","aria-label","aria-current","toggleMode","htmlFor","TextForm","text","setText","heading","value","onChange","event","target","rows","placeholder","textBox","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalized","msg","App","setMode","setAlert","message","setTimeout","Fragment","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a5d5022e.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, setMystyle] = useState({\r\n        color:'black',\r\n        backgroundColor: 'white',\r\n        border: '1px solid white'\r\n    })\r\n\r\n    const [btntext, setbtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    const toggleStyle = () => {\r\n       if(myStyle.color === 'black'){\r\n        setMystyle({\r\n            color: 'white',\r\n            backgroundColor: 'black',\r\n            border: '1px solid white'\r\n\r\n        })\r\n        setbtnText('Enable Light Mode')\r\n\r\n       } else {\r\n        setMystyle({\r\n            color: 'black',\r\n            backgroundColor: 'white'\r\n        })\r\n        setbtnText('Enable Dark Mode')\r\n       }\r\n    }\r\n\r\n  return (\r\n    <div className='container' style={myStyle}>\r\n        <h1 className='my-3'>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Accordion Item #1\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    Accordion Item #2\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className='container my-3'>\r\n            <button type=\"button\" onClick={toggleStyle} className='btn btn-primary'>{btntext}</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n// import { NavLink } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n            {/* <NavLink className=\"navbar-brand\" to=\"/\"> {props.title} </NavLink> */}\r\n            <a className=\"navbar-brand\" href=\"#\"> {props.title} </a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  {/* <NavLink to=\"/\" className=\"nav-link active\" aria-current=\"page\" href=\"/\"> Home</NavLink> */}\r\n                  <a  className=\"nav-link active\" aria-current=\"page\" href=\"#\"> Home</a>\r\n                </li> \r\n                <li className=\"nav-item\">\r\n                {/* <NavLink to=\"/about\" className=\"nav-link\" href=\"/\">About</NavLink> */}\r\n                  <a className=\"nav-link\" href=\"#\">About</a>\r\n                </li>\r\n                \r\n              </ul>\r\n              {/* <form className=\"d-flex\" role=\"search\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n              </form> */}\r\n\r\n            </div>\r\n            <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`} >\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n              </div>\r\n          </div>\r\n        </nav>\r\n  )\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    \r\n\r\n    const handleOnChange = (event) => {       //For Writing in Textbox\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleUpClick = () => {             //UpperCase\r\n      let textBox = text.toUpperCase();\r\n      setText(textBox)\r\n      props.showAlert(\"Converted to Uppercase\", 'success');\r\n  }\r\n\r\n    const handleLoClick = () => {             //LowerCase\r\n        let textBox = text.toLowerCase();\r\n        setText(textBox)\r\n        props.showAlert(\"Converted to Lowercase\", 'success');\r\n    }\r\n\r\n    const handleCopyClick = () => {           //Copy To cLipboard\r\n      let text = document.getElementById('myBox')\r\n      text.select()\r\n      text.setSelectionRange(0, 9999);\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Copied To Clipboard\", \"success\")\r\n    }\r\n\r\n    const handleSpaceRemoveClick = () => {\r\n      // eslint-disable-next-line\r\n      let newText = text.split(/[  ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Extra spaces removd.\", \"success\");\r\n    }\r\n\r\n    const clearClick = () => {\r\n      let textBox = ''\r\n      setText(textBox)\r\n      props.showAlert(\"Text Cleared\", 'success');\r\n    }\r\n\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <div style={{color: props.mode === 'dark'?'white':'black'}}>\r\n      <div className=\"container\" >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" \r\n          value={text} \r\n          onChange={handleOnChange} id=\"myBox\" \r\n          style={{\r\n            backgroundColor: props.mode === 'dark'?'#212109':'white', \r\n            color: props.mode === 'dark'?'white':'black'}}\r\n          rows=\"8\" \r\n          placeholder=\"Enter Your Text To Change Into Uppercase\"></textarea>\r\n        </div>\r\n          <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n          <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Covert To LowerCase</button>\r\n          <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>Copy Text</button>\r\n          <button className=\"btn btn-primary mx-2\" onClick={handleSpaceRemoveClick}>Remove Extra Whitespace</button>\r\n          <button className=\"btn btn-primary mx-2\" onClick={clearClick}>Clear</button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n          <h1>Your Text Summary</h1>\r\n          {/* <p>{text.split(\" \").length} words and {text.length} characters.</p>\r\n          <p>{0.008 * text.split(\" \").length} Minutes read.</p> */}\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:'Write something in the textbox above to preview it.'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalized = (word) => {\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{capitalized(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useState } from \"react\";\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport \"./App.css\";\n\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light') //\n  const [alert, setAlert] = useState(null)\n\n  const showAlert =(message, type) => {\n    setAlert({\n      msg:message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#212109';\n      showAlert(\"Dark mode has been activated.\", \"success\");\n      document.title = 'TextUtils - Dark Mode'\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been activated.\", \"success\");\n      document.title = 'TextUtils - Light Mode'\n    }\n  }\n\n    return (\n       <>\n        <Navbar title='TextUtils' mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n         <TextForm showAlert={showAlert} heading='Enter the text to analyse' mode={mode}/> \n          <About/>\n        </div> \n       </>\n\n\n      // <BrowserRouter>\n      // <Navbar title='TextUtils' mode={mode} toggleMode={toggleMode}/>\n      // <Alert alert={alert}/>\n      //   <Routes>\n      //     <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading='Enter the text to analyse' mode={mode}/>} />\n      //     <Route exact path=\"/about\" element={<About/>} />\n      //     <Route path='*' element={<h1>Page Not Found</h1>} />\n      //   </Routes>\n      // </BrowserRouter>\n    );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}